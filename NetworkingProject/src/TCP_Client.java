import java.io.DataOutputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.Scanner;

public class TCP_Client {
	public static void main(String[] args) {
		String clientName = "Client Josh Reynolds";
		Boolean debug = false;
		Socket socket = new Socket();
		try {
			socket.connect(new InetSocketAddress("127.0.0.1", 5001), 1000);
		    System.out.println("Connection Successful!");

			// Get integer from user input
			Scanner scanner = new Scanner(System.in);
			System.out.println("Enter valid integer value: ");
			int userNum = 0;
			boolean validInput = false;

			// Ensure number is actually an integer
			while(!validInput) {
				try {
					userNum = Integer.parseInt(scanner.nextLine());
					validInput = true; // Input is valid, exit the loop
				} catch (NumberFormatException e) {
					System.out.println("Invalid input. Please enter a valid integer.");
					validInput = false; // Input is not valid, continue the loop
				}
			}
			

			// Establish DataStreams for IN (to server) and OUT (from server)
			DataInputStream dataIn = new DataInputStream(socket.getInputStream());
			DataOutputStream dataOut = new DataOutputStream(socket.getOutputStream());

			// Send string of name and entered integer
			dataOut.writeUTF(clientName + ", " + userNum);
			if(debug) System.out.println("Debug: Sending message to server");

			// Get message from the server, parse the string
			String serverMessage = dataIn.readUTF();
			if(debug) System.out.println("Debug: Message recieved from server");
			String[] parts = serverMessage.split(", ");
			String serverName = parts[0];
			int serverNumber = Integer.parseInt(parts[1]);

			// Compute sum
			int finalNum = userNum + serverNumber;
			System.out.println("[" + clientName + "] (that's me!) is now adding your number random number generated by [" + serverName + "]");
			System.out.println("You gave: [" + userNum + "]" + " and server generated: [" + serverNumber + "] which equals " + (userNum+serverNumber));

			// Terminate after releasing any created sockets
			if(debug) System.out.println("Debug: Closing socket");
			dataIn.close();
			dataOut.close();
			socket.close();
		} catch (IOException e) {
			System.out.println("Socket could not connect!");
		}
	}
}
